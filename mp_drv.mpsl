/*

    Minimum Profit 5.x
    A Programmer's Text Editor

    Copyright (C) 1991-2006 Angel Ortega <angel@triptico.com>

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

    http://www.triptico.com

*/

/* default UI functions */

sub mp.drv.dialog()
/* fallback for drivers lacking mp.drv.dialog() */
{
	mp.drv.alert(L("This driver doesn't implement mp.drv.dialog()"));
}

sub mp.drv.readline(prompt, hist, def)
/* mp.drv.dialog()-based readline() */
{
	local r = mp.drv.dialog( [
		{ 'label'	=> prompt,
		  'type'	=> 'text',
		  'history'	=> hist,
		  'value'	=> def	}
	] );

	return(r[0]);
}


sub mp.drv.readline_password(prompt)
/* mp.drv.dialog()-based readline_password() */
{
	local r = mp.drv.dialog( [
		{ 'label'	=> prompt,
		  'type'	=> 'password' }
	] );

	return(r[0]);
}


sub mp.drv.readline_search(prompt, def)
/* mp.drv.dialog()-based readline_search() */
{
	local r = mp.drv.dialog( [
		{ 'label'	=> prompt,
		  'type'	=> 'text',
		  'history'	=> 'search',
		  'value'	=> def	},
		{ 'label'	=> L("Case sensitive:"),
		  'type'	=> 'checkbox',
		  'value'	=> mp.config.case_sensitive_search }
	] );

	if(r != NULL)
		mp.config.case_sensitive_search = r[1];

	return(r[0]);
}


sub mp.drv.readline_replace(this_p, this_d, that_p, that_d)
/* mp.drv.dialog()-based readline_replace() */
{
	local r = mp.drv.dialog( [
		{ 'label'	=> this_p,
		  'type'	=> 'text',
		  'history'	=> 'search',
		  'value'	=> this_d },
		{ 'label'	=> that_p,
		  'type'	=> 'text',
		  'history'	=> 'replace',
		  'value'	=> that_d },
		{ 'label'	=> L("Case sensitive:"),
		  'type'	=> 'checkbox',
		  'value'	=> mp.config.case_sensitive_search },
		{ 'label'	=> L("Global replace:"),
		  'type'	=> 'checkbox',
		  'value'	=> mp.config.global_replace }
	] );

	if(r != NULL)
	{
		mp.config.case_sensitive_search = r[2];
		mp.config.global_replace = r[3];
		r = [ r[0], r[1] ];
	}

	return(r);
}


sub mp.drv.list(prompt, list, pos)
/* mp.drv.dialog()-based list() */
{
	local r = mp.drv.dialog( [
		{ 'label'	=> prompt,
		  'type'	=> 'list',
		  'list'	=> list,
		  'value'	=> pos	}
	] );

	return(r[0]);
}


/* driver wrappers */

sub mp.update_ui()			{ mp.drv.update_ui(); }
sub mp.alert(msg)			{ mp.drv.alert(msg); }
sub mp.confirm(msg)			{ mp.drv.confirm(msg); }
sub mp.readline(prompt, hist, def)	{ mp.drv.readline(prompt, hist, def); }
sub mp.readline_password(prompt)	{ mp.drv.readline_password(prompt); }
sub mp.readline_search(prompt, def)	{ mp.drv.readline_search(prompt, def); }
sub mp.readline_replace(p1, d1, p2, d2) { mp.drv.readline_replace(p1, d1, p2, d2); }
sub mp.openfile(prompt)			{ mp.drv.openfile(prompt); }
sub mp.savefile(prompt)			{ mp.drv.savefile(prompt); }
sub mp.list(prompt, list, pos)		{ mp.drv.list(prompt, list, pos); }
