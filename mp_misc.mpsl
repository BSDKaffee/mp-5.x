/*

    Minimum Profit 5.x
    A Programmer's Text Editor

    Miscellaneous editor actions.

    Copyright (C) 1991-2006 Angel Ortega <angel@triptico.com>

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

    http://www.triptico.com

*/

/* editor actions */

mp.actions['eval']	= sub (d) { 
	local t = mp.drv.form( [
		{ 'label' => L("Code to execute:"),
		  'type' => 'text',
		  'history' => 'eval' }
		]);

	if(t != NULL)
	{
		t = eval(t[0]);

		if(ERROR != NULL)
		{
			mp.alert(L("Error: ") ~ ERROR);
			ERROR = NULL;
		}
		else
		if(t != NULL)
			mp.alert(L("Exit value:\n") ~ t);
	}
};

mp.actions['eval_doc']	= sub (d) {
	local t = join("\n", d.txt.lines);

	if(t != NULL)
	{
		t = eval(t);

		if(ERROR != NULL)
		{
			mp.alert(L("Error: ") ~ ERROR);

			/* try to move the cursor to the line
			   where the error was */
			local l;

			if((l = regex( [ '/, line /', '/[0-9]+/' ], ERROR)) != NULL)
			{
				dump(l);
				mp.set_y(d, l[1]);
			}

			ERROR = NULL;
		}
	}
};

mp.actions['zoom_in'] 	= sub (d) {

	mp.config.font_size++;
	mp.update_ui();
};

mp.actions['zoom_out'] 	= sub (d) {

	if(mp.config.font_size > 4)
	{
		mp.config.font_size--;
		mp.update_ui();
	}
};

/* default key bindings */

mp.keycodes['escape']		= 'eval';
mp.keycodes['f12']		= 'zoom_in';
mp.keycodes['ctrl-kp-plus' ]	= 'zoom_in';
mp.keycodes['f11']		= 'zoom_out';
mp.keycodes['ctrl-kp-minus' ]	= 'zoom_out';

/* action descriptions */

mp.actdesc['eval']	= LL("Execute MPSL code...");
mp.actdesc['eval_doc']	= LL("Execute document as MPSL");
mp.actdesc['zoom_in']	= LL("Bigger font");
mp.actdesc['zoom_out']	= LL("Smaller font");

/* code */

sub dump(v)
/* overwrite of the MPSL dump() function, dumping over a text document */
{
	local d = mp.open("<dump>");

	mp.move_eof(d);
	mp.insert(d, dumper(v));
	d.txt.mod = 0;
}
